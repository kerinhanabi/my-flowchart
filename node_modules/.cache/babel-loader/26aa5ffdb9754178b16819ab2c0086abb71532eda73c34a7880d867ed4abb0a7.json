{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"flowchart-container\"\n};\nconst _hoisted_2 = [\"height\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_flowchart_link = _resolveComponent(\"flowchart-link\");\n  const _component_flowchart_node = _resolveComponent(\"flowchart-node\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(), _createElementBlock(\"svg\", {\n    width: \"100%\",\n    height: `${$props.height}px`\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.lines, (link, index) => {\n    return _openBlock(), _createBlock(_component_flowchart_link, {\n      key: `link${index}`,\n      link: link,\n      onDeleteLink: $event => $options.linkDelete(link.id)\n    }, null, 8 /* PROPS */, [\"link\", \"onDeleteLink\"]);\n  }), 128 /* KEYED_FRAGMENT */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.scene.nodes, (node, index) => {\n    return _openBlock(), _createBlock(_component_flowchart_node, {\n      key: `node${index}`,\n      node: node,\n      options: $options.nodeOptions,\n      onLinkingStart: $event => $options.linkingStart(node.id),\n      onLinkingStop: $event => $options.linkingStop(node.id),\n      onNodeSelected: $event => $options.nodeSelected(node.id, $event)\n    }, null, 8 /* PROPS */, [\"node\", \"options\", \"onLinkingStart\", \"onLinkingStop\", \"onNodeSelected\"]);\n  }), 128 /* KEYED_FRAGMENT */))], 8 /* PROPS */, _hoisted_2))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","width","height","$props","_Fragment","_renderList","$options","lines","link","index","_createBlock","_component_flowchart_link","key","onDeleteLink","$event","linkDelete","id","scene","nodes","node","_component_flowchart_node","options","nodeOptions","onLinkingStart","linkingStart","onLinkingStop","linkingStop","onNodeSelected","nodeSelected","_hoisted_2"],"sources":["/Users/kerinwong/Documents/VSCode_tutorial/my-simple-flowchart/src/components/SimpleFlowchart.vue"],"sourcesContent":["<template>\n    <div class=\"flowchart-container\">\n      <svg width=\"100%\" :height=\"`${height}px`\">\n        <flowchart-link v-for=\"(link, index) in lines\" :key=\"`link${index}`\" :link=\"link\" @deleteLink=\"linkDelete(link.id)\" />\n        <flowchart-node v-for=\"(node, index) in scene.nodes\" :key=\"`node${index}`\" :node=\"node\" :options=\"nodeOptions\" @linkingStart=\"linkingStart(node.id)\" @linkingStop=\"linkingStop(node.id)\" @nodeSelected=\"nodeSelected(node.id, $event)\" />\n      </svg>\n    </div>\n  </template>\n  \n  <script>\n  import FlowchartLink from './FlowchartLink.vue';\n  import FlowchartNode from './FlowchartNode.vue';\n  import { getMousePosition } from '../assets/utility/position.js';\n  \n  export default {\n    name: 'SimpleFlowchart',\n    components: {\n      FlowchartLink,\n      FlowchartNode,\n    },\n    props: {\n      scene: {\n        type: Object,\n      },\n      height: {\n        type: Number,\n        default: 400,\n      },\n    },\n    data() {\n      return {\n        localScene: this.scene,\n        action: {\n          linking: false,\n          dragging: null,\n          selected: null,\n        },\n        mouse: {\n          x: 0,\n          y: 0,\n          lastX: 0,\n          lastY: 0,\n        },\n      };\n    },\n    computed: {\n      lines() {\n        return this.localScene.links;\n      },\n      nodeOptions() {\n        // Add node options here\n        return {};\n      },\n    },\n    methods: {\n      linkingStart(id) {\n        this.action.linking = true;\n        this.action.dragging = id;\n      },\n      linkingStop(id) {\n        if (this.action.dragging !== id) {\n          const newLink = {\n            id: Math.max(...this.localScene.links.map(link => link.id)) + 1,\n            from: this.action.dragging,\n            to: id,\n          };\n          this.localScene.links.push(newLink);\n          this.$emit('linkAdded', newLink);\n        }\n        this.action.linking = false;\n        this.action.dragging = null;\n      },\n      linkDelete(id) {\n        this.localScene.links = this.localScene.links.filter(link => link.id !== id);\n        this.$emit('linkDeleted', id);\n      },\n      nodeSelected(id, e) {\n        this.action.dragging = id;\n        this.action.selected = id;\n        this.mouse.lastX = e.pageX || e.clientX + document.documentElement.scrollLeft;\n        this.mouse.lastY = e.pageY || e.clientY + document.documentElement.scrollTop;\n        this.$emit('nodeSelected', id);\n      },\n      handleMove(e) {\n        if (this.action.linking) {\n          [this.mouse.x, this.mouse.y] = getMousePosition(this.$el, e);\n          [this.draggingLink.mx, this.draggingLink.my] = [this.mouse.x, this.mouse.y];\n        }\n        if (this.action.dragging) {\n          const node = this.localScene.nodes.find(node => node.id === this.action.dragging);\n          if (node) {\n            node.x += (this.mouse.x - this.mouse.lastX) / this.localScene.scale;\n            node.y += (this.mouse.y - this.mouse.lastY) / this.localScene.scale;\n            this.mouse.lastX = this.mouse.x;\n            this.mouse.lastY = this.mouse.y;\n          }\n        }\n        if (this.action.scrolling) {\n          [this.mouse.x, this.mouse.y] = getMousePosition(this.$el, e);\n          let diffX = this.mouse.x - this.mouse.lastX;\n          let diffY = this.mouse.y - this.mouse.lastY;\n  \n          this.mouse.lastX = this.mouse.x;\n          this.mouse.lastY = this.mouse.y;\n  \n          this.localScene.centerX += diffX;\n          this.localScene.centerY += diffY;\n        }\n      },\n    },\n  };\n  </script>\n  \n  <style scoped lang=\"scss\">\n  .flowchart-container {\n    margin: 0;\n    background: #ddd;\n    position: relative;\n    overflow: hidden;\n    svg {\n      cursor: grab;\n    }\n  }\n  </style>"],"mappings":";;EACSA,KAAK,EAAC;AAAqB;mBADpC;;;;uBACIC,mBAAA,CAKM,OALNC,UAKM,I,cAJJD,mBAAA,CAGM;IAHDE,KAAK,EAAC,MAAM;IAAEC,MAAM,KAAKC,MAAA,CAAAD,MAAM;yBAClCH,mBAAA,CAAsHK,SAAA,QAH9HC,WAAA,CAGgDC,QAAA,CAAAC,KAAK,EAHrD,CAGgCC,IAAI,EAAEC,KAAK;yBAAnCC,YAAA,CAAsHC,yBAAA;MAAtEC,GAAG,SAASH,KAAK;MAAKD,IAAI,EAAEA,IAAI;MAAGK,YAAU,EAAAC,MAAA,IAAER,QAAA,CAAAS,UAAU,CAACP,IAAI,CAACQ,EAAE;;qDACjHjB,mBAAA,CAAyOK,SAAA,QAJjPC,WAAA,CAIgDF,MAAA,CAAAc,KAAK,CAACC,KAAK,EAJ3D,CAIgCC,IAAI,EAAEV,KAAK;yBAAnCC,YAAA,CAAyOU,yBAAA;MAAnLR,GAAG,SAASH,KAAK;MAAKU,IAAI,EAAEA,IAAI;MAAGE,OAAO,EAAEf,QAAA,CAAAgB,WAAW;MAAGC,cAAY,EAAAT,MAAA,IAAER,QAAA,CAAAkB,YAAY,CAACL,IAAI,CAACH,EAAE;MAAIS,aAAW,EAAAX,MAAA,IAAER,QAAA,CAAAoB,WAAW,CAACP,IAAI,CAACH,EAAE;MAAIW,cAAY,EAAAb,MAAA,IAAER,QAAA,CAAAsB,YAAY,CAACT,IAAI,CAACH,EAAE,EAAEF,MAAM;;kDAJ5Oe,UAAA,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}