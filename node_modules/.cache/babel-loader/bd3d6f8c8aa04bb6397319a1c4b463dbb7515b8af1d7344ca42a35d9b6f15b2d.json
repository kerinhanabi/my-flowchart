{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport FlowchartLink from './FlowchartLink.vue';\nimport FlowchartNode from './FlowchartNode.vue';\nexport default {\n  name: 'SimpleFlowchart',\n  components: {\n    FlowchartLink,\n    FlowchartNode\n  },\n  props: {\n    scene: {\n      type: Object\n    },\n    height: {\n      type: Number,\n      default: 400\n    }\n  },\n  data() {\n    return {\n      localScene: this.scene,\n      action: {\n        linking: false,\n        dragging: null,\n        selected: null\n      },\n      mouse: {\n        x: 0,\n        y: 0,\n        lastX: 0,\n        lastY: 0\n      }\n    };\n  },\n  computed: {\n    lines() {\n      return this.localScene.links;\n    },\n    nodeOptions() {\n      // Add node options here\n      return {};\n    }\n  },\n  methods: {\n    linkingStart(id) {\n      this.action.linking = true;\n      this.action.dragging = id;\n    },\n    linkingStop(id) {\n      if (this.action.dragging !== id) {\n        const newLink = {\n          id: Math.max(...this.localScene.links.map(link => link.id)) + 1,\n          from: this.action.dragging,\n          to: id\n        };\n        this.localScene.links.push(newLink);\n        this.$emit('linkAdded', newLink);\n      }\n      this.action.linking = false;\n      this.action.dragging = null;\n    },\n    linkDelete(id) {\n      this.localScene.links = this.localScene.links.filter(link => link.id !== id);\n      this.$emit('linkDeleted', id);\n    },\n    nodeSelected(id, e) {\n      this.action.dragging = id;\n      this.action.selected = id;\n      this.mouse.lastX = e.pageX || e.clientX + document.documentElement.scrollLeft;\n      this.mouse.lastY = e.pageY || e.clientY + document.documentElement.scrollTop;\n      this.$emit('nodeSelected', id);\n    },\n    handleMove(e) {\n      if (this.action.linking) {\n        this.mouse.x = e.pageX || e.clientX + document.documentElement.scrollLeft;\n        this.mouse.y = e.pageY || e.clientY + document.documentElement.scrollTop;\n      }\n      if (this.action.dragging) {\n        const node = this.localScene.nodes.find(node => node.id === this.action.dragging);\n        if (node) {\n          node.x += (this.mouse.x - this.mouse.lastX) / this.localScene.scale;\n          node.y += (this.mouse.y - this.mouse.lastY) / this.localScene.scale;\n          this.mouse.lastX = this.mouse.x;\n          this.mouse.lastY = this.mouse.y;\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["FlowchartLink","FlowchartNode","name","components","props","scene","type","Object","height","Number","default","data","localScene","action","linking","dragging","selected","mouse","x","y","lastX","lastY","computed","lines","links","nodeOptions","methods","linkingStart","id","linkingStop","newLink","Math","max","map","link","from","to","push","$emit","linkDelete","filter","nodeSelected","e","pageX","clientX","document","documentElement","scrollLeft","pageY","clientY","scrollTop","handleMove","node","nodes","find","scale"],"sources":["/Users/kerinwong/Documents/VSCode_tutorial/my-simple-flowchart/src/components/SimpleFlowchart.vue"],"sourcesContent":["<template>\n    <div class=\"flowchart-container\">\n      <svg width=\"100%\" :height=\"`${height}px`\">\n        <flowchart-link v-for=\"(link, index) in lines\" :key=\"`link${index}`\" :link=\"link\" @deleteLink=\"linkDelete(link.id)\" />\n        <flowchart-node v-for=\"(node, index) in scene.nodes\" :key=\"`node${index}`\" :node=\"node\" :options=\"nodeOptions\" @linkingStart=\"linkingStart(node.id)\" @linkingStop=\"linkingStop(node.id)\" @nodeSelected=\"nodeSelected(node.id, $event)\" />\n      </svg>\n    </div>\n  </template>\n  \n  <script>\n  import FlowchartLink from './FlowchartLink.vue';\n  import FlowchartNode from './FlowchartNode.vue';\n  \n  export default {\n    name: 'SimpleFlowchart',\n    components: {\n      FlowchartLink,\n      FlowchartNode,\n    },\n    props: {\n      scene: {\n        type: Object,\n      },\n      height: {\n        type: Number,\n        default: 400,\n      },\n    },\n    data() {\n      return {\n        localScene: this.scene,\n        action: {\n          linking: false,\n          dragging: null,\n          selected: null,\n        },\n        mouse: {\n          x: 0,\n          y: 0,\n          lastX: 0,\n          lastY: 0,\n        },\n      };\n    },\n    computed: {\n      lines() {\n        return this.localScene.links;\n      },\n      nodeOptions() {\n        // Add node options here\n        return {};\n      },\n    },\n    methods: {\n      linkingStart(id) {\n        this.action.linking = true;\n        this.action.dragging = id;\n      },\n      linkingStop(id) {\n        if (this.action.dragging !== id) {\n          const newLink = {\n            id: Math.max(...this.localScene.links.map(link => link.id)) + 1,\n            from: this.action.dragging,\n            to: id,\n          };\n          this.localScene.links.push(newLink);\n          this.$emit('linkAdded', newLink);\n        }\n        this.action.linking = false;\n        this.action.dragging = null;\n      },\n      linkDelete(id) {\n        this.localScene.links = this.localScene.links.filter(link => link.id !== id);\n        this.$emit('linkDeleted', id);\n      },\n      nodeSelected(id, e) {\n        this.action.dragging = id;\n        this.action.selected = id;\n        this.mouse.lastX = e.pageX || e.clientX + document.documentElement.scrollLeft;\n        this.mouse.lastY = e.pageY || e.clientY + document.documentElement.scrollTop;\n        this.$emit('nodeSelected', id);\n      },\n      handleMove(e) {\n        if (this.action.linking) {\n          this.mouse.x = e.pageX || e.clientX + document.documentElement.scrollLeft;\n          this.mouse.y = e.pageY || e.clientY + document.documentElement.scrollTop;\n        }\n        if (this.action.dragging) {\n          const node = this.localScene.nodes.find(node => node.id === this.action.dragging);\n          if (node) {\n            node.x += (this.mouse.x - this.mouse.lastX) / this.localScene.scale;\n            node.y += (this.mouse.y - this.mouse.lastY) / this.localScene.scale;\n            this.mouse.lastX = this.mouse.x;\n            this.mouse.lastY = this.mouse.y;\n          }\n        }\n      },\n    },\n  };\n  </script>\n  \n  <style scoped lang=\"scss\">\n  .flowchart-container {\n    margin: 0;\n    background: #ddd;\n    position: relative;\n    overflow: hidden;\n    svg {\n      cursor: grab;\n    }\n  }\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}