{"ast":null,"code":"export default {\n  name: 'FlowchartLink',\n  props: {\n    // start point position [x, y]\n    start: {\n      type: Array,\n      default() {\n        return [0, 0];\n      }\n    },\n    // end point position [x, y]\n    end: {\n      type: Array,\n      default() {\n        return [0, 0];\n      }\n    },\n    id: Number\n  },\n  data() {\n    return {\n      show: {\n        delete: false\n      }\n    };\n  },\n  methods: {\n    handleMouseOver() {\n      if (this.id) {\n        this.show.delete = true;\n      }\n    },\n    handleMouseLeave() {\n      this.show.delete = false;\n    },\n    caculateCenterPoint() {\n      // caculate arrow position: the center point between start and end\n      const dx = (this.end[0] - this.start[0]) / 2;\n      const dy = (this.end[1] - this.start[1]) / 2;\n      return [this.start[0] + dx, this.start[1] + dy];\n    },\n    caculateRotation() {\n      // caculate arrow rotation\n      const angle = -Math.atan2(this.end[0] - this.start[0], this.end[1] - this.start[1]);\n      const degree = angle * 180 / Math.PI;\n      return degree < 0 ? degree + 360 : degree;\n    },\n    deleteLink() {\n      this.$emit('deleteLink');\n    }\n  },\n  computed: {\n    pathStyle() {\n      return {\n        stroke: 'rgb(255, 136, 85)',\n        strokeWidth: 2.73205,\n        fill: 'none'\n      };\n    },\n    arrowStyle() {\n      return {\n        stroke: 'rgb(255, 136, 85)',\n        strokeWidth: 5.73205,\n        fill: 'none'\n      };\n    },\n    arrowTransform() {\n      const [arrowX, arrowY] = this.caculateCenterPoint();\n      const degree = this.caculateRotation();\n      return `translate(${arrowX}, ${arrowY}) rotate(${degree})`;\n    },\n    dAttr() {\n      let cx = this.start[0],\n        cy = this.start[1],\n        ex = this.end[0],\n        ey = this.end[1];\n      let x1 = cx,\n        y1 = cy + 50,\n        x2 = ex,\n        y2 = ey - 50;\n      return `M ${cx}, ${cy} C ${x1}, ${y1}, ${x2}, ${y2}, ${ex}, ${ey}`;\n    }\n  }\n};","map":{"version":3,"names":["name","props","start","type","Array","default","end","id","Number","data","show","delete","methods","handleMouseOver","handleMouseLeave","caculateCenterPoint","dx","dy","caculateRotation","angle","Math","atan2","degree","PI","deleteLink","$emit","computed","pathStyle","stroke","strokeWidth","fill","arrowStyle","arrowTransform","arrowX","arrowY","dAttr","cx","cy","ex","ey","x1","y1","x2","y2"],"sources":["/Users/kerinwong/Documents/VSCode_tutorial/my-simple-flowchart/src/components/FlowchartLink.vue"],"sourcesContent":["<template>\n    <g @mouseover=\"handleMouseOver\"\n      @mouseleave=\"handleMouseLeave\">\n      <path :d=\"dAttr\" :style=\"pathStyle\"></path>\n      <a v-if=\"show.delete\" @click=\"deleteLink\">\n        <text \n          text-anchor=\"middle\" \n          :transform=\"arrowTransform\"\n          font-size=\"22\">&times;</text>\n      </a>\n      <path v-else d=\"M -1 -1 L 0 1 L 1 -1 z\"\n        :style=\"arrowStyle\"\n        :transform=\"arrowTransform\"></path>\n    </g>\n  </template>\n  \n  <script>\n  export default {\n    name: 'FlowchartLink',\n    props: {\n      // start point position [x, y]\n      start: {\n        type: Array,\n        default() {\n          return [0, 0]\n        }\n      },\n      // end point position [x, y]\n      end: {\n        type: Array,\n        default() {\n          return [0, 0]\n        }\n      },\n      id: Number,\n    },\n    data() {\n      return {\n        show: {\n          delete: false,\n        }\n      }\n    },\n    methods: {\n      handleMouseOver() {\n        if (this.id) {\n          this.show.delete = true;\n        }\n      },\n      handleMouseLeave() {\n        this.show.delete = false;\n      },\n      caculateCenterPoint() {\n        // caculate arrow position: the center point between start and end\n        const dx = (this.end[0] - this.start[0]) / 2;\n        const dy = (this.end[1] - this.start[1]) / 2;\n        return [this.start[0] + dx, this.start[1] + dy];\n      },\n      caculateRotation() {\n        // caculate arrow rotation\n        const angle = -Math.atan2(this.end[0] - this.start[0], this.end[1] - this.start[1]);\n        const degree = angle * 180 / Math.PI;\n        return degree < 0 ? degree + 360 : degree;\n      },\n      deleteLink() {\n        this.$emit('deleteLink')\n      }\n    },\n    computed: {\n      pathStyle() {\n        return {\n          stroke: 'rgb(255, 136, 85)',\n          strokeWidth: 2.73205,\n          fill: 'none',\n        }\n      },\n      arrowStyle() {\n        return {\n          stroke: 'rgb(255, 136, 85)',\n          strokeWidth: 5.73205,\n          fill: 'none',\n        }\n      },\n      arrowTransform() {\n        const [arrowX, arrowY] = this.caculateCenterPoint();\n        const degree = this.caculateRotation()\n        return `translate(${arrowX}, ${arrowY}) rotate(${degree})`;\n      },\n      dAttr() {\n        let cx = this.start[0], cy = this.start[1], ex = this.end[0], ey = this.end[1];\n        let x1 = cx, y1 = cy + 50, x2 = ex, y2 = ey - 50;\n        return `M ${cx}, ${cy} C ${x1}, ${y1}, ${x2}, ${y2}, ${ex}, ${ey}`;\n      }\n    }\n  }\n  </script>\n  \n  <style scoped lang=\"scss\">\n  g {\n    cursor: pointer;\n  }\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}